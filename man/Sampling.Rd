% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampling.R
\name{Sampling}
\alias{Sampling}
\title{Sampling Primary Clusters}
\usage{
Sampling(object, nsamples = 500, method = "sps",
  optm_parameters = FALSE, pinit = 0.195, pfin = 0.9, K = 500)
}
\arguments{
\item{object}{A SingleCellExperiment object containing normalized expression values in \code{"normcounts"}.}

\item{nsamples}{integer, total number of samples to return post sampling; ignored when \code{optm_parameters = FALSE}.}

\item{method}{character, one of c("sps","random"). Structure Preserving Sampling (sps) selects proportional number of members from each cluster obtained from partitioning an approximate nearest neighbour graph.}

\item{optm_parameters}{logical, when TRUE the parameters (\code{pinit, pfin, K}) are optimized such that exactly \code{nsamples} are returned. Optimization is performed using simulated annealing}

\item{pinit}{numeric [0,0.5], minimum probability of that sampling occurs from a cluster, ignored when \code{optm_parameters = TRUE}.}

\item{pfin}{numeric [0.5,1], maximum probability of that sampling occurs from a cluster, ignored when \code{optm_parameters = TRUE}.}

\item{K}{numeric, scaling factor analogous to Boltzmann constant, ignored when \code{optm_parameters = TRUE}.}
}
\value{
A SingleCellExperiment object with an additional column named \code{Sampling} in \code{colData} column.
The column stores a a logical value against each cell  to indicate if it has been sampled.
}
\description{
Performs sampling from the primary clusters in an inverse exponential order of cluster size.
}
\details{
Sampling in inverse proportion of cluster size following a exponential decay equation.
To ensure selection of sufficient representative transcriptomes from small clusters,
an exponential decay function  is used to determine the proportion of transcriptomes to be sampled from each
cluster. For $i^{th}$ cluster, the proportion of expression profiles $p_i$ was obtained as follows.\cr
\ifelse{html}{\out{p<sub>i</sub> = p<sub>l</sub> <font face="symbol">-</font> e<sup><font face="symbol">-</font>(S<sub>i</sub>)/(K)</sup>}}{\deqn{Lp_{i} = p_{l} - e^{-\frac{S_i}{K}} (p_{l} - p_{u})}{ASCII}}
where \eqn{S_i} is the size of cluster \eqn{i}, \eqn{K} is a scaling factor, \eqn{p_i} is the proportion of cells to be sampled from the $i^{th}$ Louvain cluster. $p_l$ and $p_u$ are lower and upper bounds of the proportion value respectively.
}
\examples{
library(SingleCellExperiment)
ncells <- 100
ngenes <- 2000
x <- matrix(rpois(ncells*ngenes, lambda = 10), ncol=ncells, nrow=ngenes, byrow=TRUE)
rownames(x) <- paste0("Gene", seq_len(ngenes))
colnames(x) <- paste0("Cell", seq_len(ncells))
sce <- SingleCellExperiment(list(counts=x))
sce <- CountNormalize(sce)
sce <- RankGenes(sce)
sce <- Sampling(sce)
}
\references{
{
\insertRef{sengupta2013reformulated}{dropClust}
}
}
