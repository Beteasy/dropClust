% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalize.R
\name{CountNormalize}
\alias{CountNormalize}
\title{Normalize a SingleCellExperiment object using total counts}
\usage{
CountNormalize(object, return_log = FALSE)
}
\arguments{
\item{object}{A SingleCellExperiment object.}

\item{return_log}{Logical scalar, should normalized values be returned on the log2 scale?
If \code{TRUE}, output is stored as \code{"logcounts"} in the returned object; if \code{FALSE} output is stored as \code{"normcounts"}.#'}
}
\value{
A SingleCellExperiment object containing normalized expression values in \code{"normcounts"} if \code{log=FALSE},
and log-normalized expression values in \code{"logcounts"} if \code{log=TRUE}.
}
\description{
Compute normalized expression values from count data in a SingleCellExperiment object, using the median normalized total count stored in the object.
}
\details{
Normalized expression values are computed by dividing the counts for each cell by median normalized total count of that cell.
If \code{log=TRUE}, log-normalized values are calculated by adding a pseudocount of \code{1} to the normalized count and performing a log2 transformation.
}
\examples{
library(SingleCellExperiment)
ncells <- 100
ngenes <- 2000
x <- matrix(rpois(ncells*ngenes, lambda = 10), ncol=ncells, nrow=ngenes, byrow=TRUE)
rownames(x) <- paste0("Gene", seq_len(ngenes))
colnames(x) <- paste0("Cell", seq_len(ncells))
sce <- SingleCellExperiment(list(counts=x))
sce <- CountNormalize(sce)

}
