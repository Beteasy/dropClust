// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// ColDispersion
Eigen::VectorXd ColDispersion(SEXP mat);
RcppExport SEXP _dropClust_ColDispersion(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(ColDispersion(mat));
    return rcpp_result_gen;
END_RCPP
}
// reduce_genes_cpp
RcppExport SEXP reduce_genes_cpp(List& l);
RcppExport SEXP _dropClust_reduce_genes_cpp(SEXP lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List& >::type l(lSEXP);
    rcpp_result_gen = Rcpp::wrap(reduce_genes_cpp(l));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dropClust_ColDispersion", (DL_FUNC) &_dropClust_ColDispersion, 1},
    {"_dropClust_reduce_genes_cpp", (DL_FUNC) &_dropClust_reduce_genes_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_dropClust(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
